//===-- PROL16Subtarget.h - Define Subtarget for the PROL16 -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the PROL16 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_PROL16_PROL16SUBTARGET_H
#define LLVM_LIB_TARGET_PROL16_PROL16SUBTARGET_H

#include "llvm/CodeGen/TargetSubtargetInfo.h"	// also needed for PROL16GenSubtargetInfo.inc

#include "PROL16FrameLowering.h"
#include "PROL16ISelLowering.h"
#include "PROL16InstrInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "PROL16GenSubtargetInfo.inc"

namespace llvm {

class PROL16Subtarget final : public PROL16GenSubtargetInfo {
public:
	PROL16Subtarget(Triple const &targetTriple, std::string const &cpu, std::string const &featureString,
			TargetMachine const &targetMachine);

	/// ParseSubtargetFeatures - Parses features string setting specified
	/// subtarget options.  Definition of function is auto-generated by tblgen.
	void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

	// Interfaces to the major aspects of target machine information:
	//
	// -- Instruction opcode and operand information
	// -- Pipelines and scheduling information
	// -- Stack frame information
	// -- Selection DAG lowering information
	// -- Call lowering information
	//
	// N.B. These objects may change during compilation. It's not safe to cache
	// them between functions.
	TargetFrameLowering const* getFrameLowering() const override;

	PROL16TargetLowering const* getTargetLowering() const override;

	PROL16InstrInfo const* getInstrInfo() const override;

	/// getRegisterInfo - If register information is available, return it.  If
	/// not, return null.
	TargetRegisterInfo const* getRegisterInfo() const override;

private:
	PROL16FrameLowering frameLowering;
	PROL16TargetLowering targetLowering;
	PROL16InstrInfo instructionInfo;
};

}

#endif
